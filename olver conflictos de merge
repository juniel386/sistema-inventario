[1mdiff --git a/README.md b/README.md[m
[1mindex 216fe04..f5ef8fa 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -1 +1,14 @@[m
[31m-# sistema-inventario.[m
\ No newline at end of file[m
[32m+[m[32m# Sistema de Inventario[m
[32m+[m
[32m+[m[32m## Descripci√≥n[m
[32m+[m
[32m+[m[32mEste proyecto es un sistema de inventario desarrollado en Python que permite agregar, listar, actualizar y eliminar productos almacenados en un archivo de texto.[m
[32m+[m
[32m+[m[32m## Instrucciones[m
[32m+[m
[32m+[m[32m1. Clona el repositorio.[m
[32m+[m[32m2. Aseg√∫rate de tener el archivo `inventario.txt` en la misma carpeta que el script Python.[m
[32m+[m[32m3. Ejecuta el script `inventario.py` para gestionar el inventario.[m
[32m+[m
[32m+[m[32m## Enlace al tablero de Jira[m
[32m+[m[32mhttps://junielclemente529.atlassian.net/jira/software/projects/HOLA/boards/1[m
[1mdiff --git a/inventario.py b/inventario.py[m
[1mnew file mode 100644[m
[1mindex 0000000..95d8ea2[m
[1m--- /dev/null[m
[1m+++ b/inventario.py[m
[36m@@ -0,0 +1,46 @@[m
[32m+[m[32mimport os[m
[32m+[m
[32m+[m[32mARCHIVO_INVENTARIO = "inventario.txt"[m
[32m+[m
[32m+[m
[32m+[m[32mdef eliminar_producto(nombre_producto):[m
[32m+[m[32m    """[m
[32m+[m[32m    Elimina un producto del inventario si existe.[m
[32m+[m[32m    :param nombre_producto: Nombre del producto a eliminar.[m
[32m+[m[32m    """[m
[32m+[m[32m    if not os.path.exists(ARCHIVO_INVENTARIO):[m
[32m+[m[32m        print("‚ùå No hay productos en el inventario.")[m
[32m+[m[32m        return[m
[32m+[m
[32m+[m[32m    productos = [][m
[32m+[m[32m    eliminado = False[m
[32m+[m
[32m+[m[32m    # Leer el archivo y guardar los productos en una lista[m
[32m+[m[32m    with open(ARCHIVO_INVENTARIO, "r") as f:[m
[32m+[m[32m        for linea in f:[m
[32m+[m[32m            datos = linea.strip().split(", ")[m
[32m+[m[32m            if len(datos) == 3:  # Verificar formato correcto[m
[32m+[m[32m                nombre, cantidad, precio = datos[m
[32m+[m[32m                if nombre.lower() != nombre_producto.lower():[m
[32m+[m[32m                    productos.append(linea.strip())[m
[32m+[m[32m                else:[m
[32m+[m[32m                    eliminado = True[m
[32m+[m
[32m+[m[32m    # Si no se encontr√≥ el producto, mostrar mensaje[m
[32m+[m[32m    if not eliminado:[m
[32m+[m[32m        print([m
[32m+[m[32m            f"‚ùå Producto '{nombre_producto}' no encontrado en el inventario.")[m
[32m+[m[32m        return[m
[32m+[m
[32m+[m[32m    # Sobrescribir el archivo sin el producto eliminado[m
[32m+[m[32m    with open(ARCHIVO_INVENTARIO, "w") as f:[m
[32m+[m[32m        for producto in productos:[m
[32m+[m[32m            f.write(producto + "\n")[m
[32m+[m
[32m+[m[32m    print(f"‚úÖ Producto '{nombre_producto}' eliminado correctamente.")[m
[32m+[m
[32m+[m
[32m+[m[32m# Ejemplo de uso[m
[32m+[m[32mif __name__ == "__main__":[m
[32m+[m[32m    nombre = input("Ingrese el nombre del producto a eliminar: ")[m
[32m+[m[32m    eliminar_producto(nombre)[m
[1mdiff --git a/inventario.txt b/inventario.txt[m
[1mnew file mode 100644[m
[1mindex 0000000..5c7954f[m
[1m--- /dev/null[m
[1m+++ b/inventario.txt[m
[36m@@ -0,0 +1,2 @@[m
[32m+[m[32mMouse, 10, 20[m
[32m+[m[32mTeclado, 7, 50[m
[1mdiff --git a/sistema-inventario b/sistema-inventario[m
[1mnew file mode 160000[m
[1mindex 0000000..fe3c3c7[m
[1m--- /dev/null[m
[1m+++ b/sistema-inventario[m
[36m@@ -0,0 +1 @@[m
[32m+[m[32mSubproject commit fe3c3c7c28f07d2e163ae5b51cdd36aaf070cbe6[m
